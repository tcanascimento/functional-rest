buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        jcenter()
    }
    dependencies {
        classpath "eu.davidea:grabver:2.0.1"
//        classpath 'com.bmuschko:gradle-clover-plugin:2.2.3'
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.7.1"
    }
}

plugins {
    id 'java'
    id "org.sonarqube" version "2.7"
    id 'jacoco'
}

group 'tcanascimento'
version '1.0-SNAPSHOT'

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url "https://jitpack.io" }
    maven { url "http://dl.bintray.com/davideas/maven" }
    maven { url "https://plugins.gradle.org/m2/" }
}

apply from: 'gradle/junit5.gradle'
apply from: 'gradle/vavr.gradle'
apply from: 'gradle/cyclops.gradle'
apply plugin: "eu.davidea.grabver"
//apply plugin: 'com.bmuschko.clover'

configurations {
    exclusions {
        exclude group: 'org.junit'
    }
}

dependencies {
    implementation group: 'com.github.pureconfig', name:'pureconfig-javax_2.12', version: '0.10.2'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.9'
    implementation 'com.github.jitpack:gradle-simple:1.0'
    implementation 'org.openclover:clover:4.3.1'
}

versioning {
    versioning.major
    version = versioning.name
    major 1
    minor 0
    patch 7
    preRelease "RC1"
    // Optional, custom task name to trigger the increase of the version
//    incrementOn "addVersion"
    // Optional, custom task name for which you want to save the versioning file
//    saveOn "saveVersion"
}

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.projectName", "${project.name}"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.login", "${sonar-login}"
        property "sonar.projectKey", "tcanascimento_functional-rest"
        property "sonar.organization","tcanascimento-github"
        property "sonar.junit.reportPaths", "${buildDir}/test-results/test"
        property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled true
        html.destination file("${buildDir}/jacocoHtml")
    }
}

//clover {
//    excludes = ['**/SynchronizedMultiValueMap.java']
//
//    // This is the default testIncludes configuration
//    testIncludes = ['**/*Test.java', '**/*Spec.groovy']
//    testExcludes = ['**/Mock*.java']
//
//    targetPercentage = '85%'
//
//    // Closure based syntax for additionalSourceSets and
//    // additionalTestSourceSets is also supported. Both
//    // srcDirs and classesDir properties are required.
//    // The syntax allows the following to occur as many times
//    // as necessary to define each additional sourceSet.
//    // From version 3.0.0 and later the configuration is
//    // requiring the Gradle 4.0 outputDir for each language
//    // in the sourceSet. If you have Java and Groovy sourceSets
//    // you may need to specify each language in the sourceSet
//    // separately.
//    /*additionalSourceSet {
//        srcDirs = sourceSets.generatedCode.java.srcDirs
//        classesDir = sourceSets.generatedCode.java.outputDir
//    }
//    additionalSourceSet {
//        srcDirs = sourceSets.generatedCode.groovy.srcDirs
//        classesDir = sourceSets.generatedCode.groovy.outputDir
//    }
//    additionalTestSourceSet {
//        srcDirs = sourceSets.integrationTest.java.srcDirs,
//        classesDir = sourceSets.integrationTest.java.outputDir
//    }
//    additionalTestSourceSet {
//        srcDirs = sourceSets.integrationTest.groovy.srcDirs,
//        classesDir = sourceSets.integrationTest.groovy.outputDir
//    }*/
//
//    compiler {
//        encoding = 'UTF-8'
//
//        // if the javac executable used by ant should be the same as the one used elsewhere.
//        executable = file('/usr/local/java/jdk1.8.0_05')
//        // used to add debug information for Spring applications
//        debug = true
//        additionalArgs = '-parameters'
//        additionalGroovycOpts = [configscript: project.file('myConfigScript.groovy').absolutePath]
//    }
//
//    contexts {
//        statement {
//            name = 'log'
//            regexp = '^.*LOG\\..*'
//        }
//
//        method {
//            name = 'main'
//            regexp = 'public static void main\\(String args\\[\\]\\).*'
//        }
//        method {
//            name = 'getters'
//            regexp = 'public [^\\s]+ get[A-Z][^\\s]+\\(\\)'
//            maxStatements = 1
//        }
//        method {
//            name = 'setters'
//            regexp = 'public void set[A-Z][^\\s]+\\(.+\\)'
//            maxStatements = 1
//        }
//    }
//
//    report {
//        html = true
//        pdf = true
//        filter = 'log,main,getters,setters'
//
//        // Support capturing test results from JUnix XML report
//        testResultsDir = project.tasks.getByName('test').reports.junitXml.destination
//        testResultsInclude = 'TEST-*.xml'
//
//        // Clover report nested columns support
//        columns {
//            coveredMethods format: 'longbar', min: '75'
//            coveredStatements format: '%'
//            coveredBranches format: 'raw'
//            totalPercentageCovered format: '%', scope: 'package'
//        }
//
//        // Clover history generation support
//        // See Clover documentation for details of the values supported
//        historical {
//            enabled = true
//            historyIncludes = 'clover-*.xml.gz'
//            packageFilter = null
//            from = null
//            to = null
//
//            added {
//                range = 10
//                interval = '3 weeks'
//            }
//            mover {
//                threshold = 1
//                range = 10
//                interval = '3 weeks'
//            }
//            mover {
//                threshold = 1
//                range = 10
//                interval = '3 months'
//            }
//            mover {
//                threshold = 1
//                range = 10
//                interval = '1 year'
//            }
//        }
//    }
//}