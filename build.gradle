buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "eu.davidea:grabver:2.0.1"
    }
}

plugins {
    id 'java'
}

group 'tcanascimento'
version '1.0-SNAPSHOT'

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url "https://jitpack.io" }
    maven { url "http://dl.bintray.com/davideas/maven" }
    maven { url "https://plugins.gradle.org/m2/" }
}

apply from: 'gradle/vavr.gradle'
apply from: 'gradle/junit5.gradle'
apply from: 'gradle/cyclops.gradle'
apply plugin: "eu.davidea.grabver"

configurations {
    exclusions {
        exclude group: 'org.junit'
    }
}

dependencies {
    implementation group: 'com.github.pureconfig', name:'pureconfig-javax_2.12', version: '0.10.2'
}

test {

    description = 'Executa testes. Para executar tags especÃ­ficas, use: gradle clean test -Dtag="tag".'

    String tag = System.properties.getProperty("tag")
    systemProperties = [
            'junit.jupiter.extensions.autodetection.enabled': 'true',
            'junit.jupiter.testinstance.lifecycle.default': 'per_class'
    ]

    useJUnitPlatform() {

        if(null != tag && !tag.equalsIgnoreCase("")) includeTags String.valueOf(tag)
    }

    testLogging {
        events 'PASSED', 'FAILED', 'SKIPPED'
    }

    beforeTest { descriptor ->
        logger.lifecycle("Running test: ${descriptor}")
    }
    afterSuite { desc, result ->
        if (!desc.parent) {
            println "\nTest result: ${result.resultType}"
            println "Test summary: ${result.testCount} tests, " +
                    "${result.successfulTestCount} succeeded, " +
                    "${result.failedTestCount} failed, " +
                    "${result.skippedTestCount} skipped"
        }
    }
}

versioning {
    versioning.major
    version = versioning.name
    major 1
    minor 0
    patch 7
    preRelease "RC1"
    // Optional, custom task name to trigger the increase of the version
//    incrementOn "addVersion"
    // Optional, custom task name for which you want to save the versioning file
//    saveOn "saveVersion"
}